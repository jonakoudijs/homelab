---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-app
  labels:
    app: test-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: test-app
  template:
    metadata:
      labels:
        app: test-app
    spec:
      containers:
        - name: test-app
          image: nginx:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
          volumeMounts:
            - mountPath: /data/test-longhorn
              name: longhorn-vol
            - mountPath: /data/test-nfs
              name: nfs-vol
      volumes:
        - name: longhorn-vol
          persistentVolumeClaim:
            claimName: test-longhorn
        - name: nfs-vol
          persistentVolumeClaim:
            claimName: test-nfs

---
apiVersion: v1
kind: Service
metadata:
  name: test-app
spec:
  selector:
    app: test-app
  ports:
    - port: 80

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: unifi
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-production
spec:
  rules:
    - host: test.koudijs.me
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
                service:
                  name: test-app
                  port:
                    number: 80
  tls:
    - secretName: test-url-tls
      hosts:
        - test.koudijs.me

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: test-longhorn
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: longhorn
  resources:
    requests:
      storage: 1Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: test-nfs
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: nfs-client
  resources:
    requests:
      storage: 1Gi